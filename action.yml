name: "Create Release | jcdcdev"
description: "Creates a GitHub Release with automated changelog"
author: "James Carter"
branding:
  icon: "tag"
  color: "gray-dark"
inputs:
  version:
    description: "Version"
    required: true
  github-token:
    description: "GitHub Token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Find Previous Version
      id: find-previous-tag
      shell: pwsh
      env:
        Version: ${{ inputs.version }}
      run: |
        git fetch --tags
        $tags = git tag
        $sortedTags = $tags | Sort-Object -Descending
        $previousVersion = $null
        $versionExists = $false

        foreach ($tag in $sortedTags) {
          echo "Checking tag $tag"
          if ($tag -lt $env:Version) {
            if ($previousVersion -eq $null -or $tag -gt $previousVersion) {
              if ($tag -match "alpha|beta|rc") {
                Write-Output "$tag is prerelease"
                if ($env:Version -notmatch "alpha|beta|rc") {
                  Write-Output "Skipping as $env:Version is not prerelease"
                  continue
                }
              }

              $previousVersion = $tag
            }
          }

          if ($tag -eq $env:Version) {
            $versionExists = $true
          }
        }

        if ($previousVersion -eq $null) {
          throw "No previous tag found before $env:Version"
        } 

        if ($versionExists -eq $false) {
          git config user.name "$env:GITHUB_ACTOR"
          git config user.email "$env:GITHUB_ACTOR_ID+$env:GITHUB_ACTOR@users.noreply.github.com"
          git tag -a "$env:Version" -m "Release $env:Version"
          git push origin "$env:Version"
        }

        Write-Output "The nearest previous tag to $env:Version is $previousVersion"
        echo "previous-version=$previousVersion" >> $env:GITHUB_OUTPUT
    - uses: jcdcdev/jcdcdev.Github.GenerateChangelog@main
      id: changelog
      with:
        target-version: ${{ inputs.version }}
        previous-version: ${{ steps.find-previous-tag.outputs.previous-version }}
        github-token: ${{ inputs.github-token }}
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        omitNameDuringUpdate: true
        token: ${{ inputs.github-token }}
        name: ${{ inputs.version }}
        tag: ${{ inputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
